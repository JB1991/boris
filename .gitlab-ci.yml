image: de.icr.io/lgln/kube-tools:latest

services:
  - docker:dind

stages:
  - init
  - test
  - build
  - package
  - scan
  - deploy
  - delete

cache: &global_cache
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - power/node_modules/
  policy: pull-push

npm-install:
  stage: init
  image: node:lts-alpine
  interruptible: true
  cache:
    <<: *global_cache
  script:
    - cd power
    - npm ci
    - node_modules/.bin/ngcc --tsconfig ./src/tsconfig.app.json -p es2015
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

test-karma:
  stage: test
  image: trion/ng-cli-karma:latest
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng test --browsers ChromeHeadlessNoSandbox --progress false --watch false --code-coverage
  artifacts:
    expire_in: 2 days
    public: false
    reports:
      junit: power/output/junit_karma.xml
    paths:
      - power/output/junit_karma.xml
      - power/coverage/report-lcov/lcov.info
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

test-e2e:
  stage: test
  image: trion/ng-cli-e2e:latest
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/protractor/bin/webdriver-manager update --versions.chrome 91.0.4472.77 --gecko false --standalone false
    - node_modules/@angular/cli/bin/ng e2e -c staging --webdriver-update=false
  artifacts:
    expire_in: 2 days
    public: false
    reports:
      junit: power/output/junit_e2e.xml
    paths:
      - power/output/junit_e2e.xml
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/
  when: manual

npm-audit:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  script:
    - cd power
    - npm audit --production
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

lint-ts:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng lint power
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

lint-html:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - npm run lint:html
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

lint-styles:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - npm run lint:styles
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - prod
    - /^demo-.*/

helm-dry-run:
  stage: test
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
  script:
    - helm upgrade power bitnami/nginx -n dev -f "./chart/values-$CI_COMMIT_REF_NAME.yaml" --install --dry-run
  only:
    - dev
    - staging
    - prod

kubesec:
  stage: test
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
  script:
    - helm template power bitnami/nginx -f "./chart/values-$CI_COMMIT_REF_NAME.yaml" | kubesec-scan.sh -
    - helm template power bitnami/nginx -f "./chart/values-$CI_COMMIT_REF_NAME.yaml" | kubesec-check.sh -
  only:
    - dev
    - staging
    - prod

build-test:
  stage: build
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng run power:prerender:staging
  artifacts:
    name: "compiled dist"
    expire_in: 2 hours
    public: false
    paths:
      - power/dist/power/browser
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - /^demo-.*/

build-prod:
  stage: build
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng run power:prerender:de
  artifacts:
    name: "compiled dist"
    expire_in: 2 hours
    public: false
    paths:
      - power/dist/power/browser
  only:
    - prod

kaniko-build:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  dependencies:
    - build-test
    - build-prod
  cache: {}
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR" --dockerfile "$CI_PROJECT_DIR/Dockerfile" --destination "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" --build-arg=COMMIT="$CI_COMMIT_SHORT_SHA" --build-arg=BRANCH="$CI_COMMIT_REF_NAME"
  only:
    - dev
    - staging
    - prod
    - /^demo-.*/

trivy:
  stage: scan
  dependencies: []
  cache: {}
  before_script:
    - i=0; while [ "$i" -lt 12 ]; do docker info &> /dev/null && break; sleep 5; i="$(( i + 1 ))" ; done
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    - trivy image -s UNKNOWN,MEDIUM,HIGH,CRITICAL --no-progress --exit-code 1 "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    - dev
    - staging
    - prod
    - /^demo-.*/
  allow_failure: true

sonarqube:
  stage: scan
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  dependencies:
    - test-karma
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - sonar-scanner
  only:
    - dev
  allow_failure: true

helm-deploy:
  stage: deploy
  dependencies: []
  cache: {}
  environment:
    name: "$CI_COMMIT_REF_NAME"
    action: start
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
  script:
    - helm upgrade power bitnami/nginx -n "$CI_COMMIT_REF_NAME" -f "./chart/values-$CI_COMMIT_REF_NAME.yaml" --install
      --set-string commonLabels.commit="$CI_COMMIT_SHORT_SHA"
      --set-string commonAnnotations.deployedAt="$CI_JOB_STARTED_AT"
      --set-string podLabels.commit="$CI_COMMIT_SHORT_SHA"
      --set-string podAnnotations.deployedAt="$CI_JOB_STARTED_AT"
  only:
    - dev
    - staging
    - prod

helm-deploy:branches:
  stage: deploy
  dependencies: []
  cache: {}
  environment:
    name: "$CI_COMMIT_REF_NAME"
    action: start
    url: "https://$CI_COMMIT_REF_NAME.power.niedersachsen.dev"
    on_stop: helm-delete:branches
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
  script:
    - helm upgrade "$CI_COMMIT_REF_NAME" bitnami/nginx -n dev -f ./chart/values-dev.yaml --install
      --set-string commonLabels.commit="$CI_COMMIT_SHORT_SHA"
      --set-string commonAnnotations.deployedAt="$CI_JOB_STARTED_AT"
      --set-string podLabels.commit="$CI_COMMIT_SHORT_SHA"
      --set-string podAnnotations.deployedAt="$CI_JOB_STARTED_AT"
      --set-string image.tag="$CI_COMMIT_REF_NAME"
      --set-string ingress.hostname="$CI_COMMIT_REF_NAME.power-cluster-65655d4c73bf47a3300821aa2939abf4-0001.eu-de.containers.appdomain.cloud"
      --set-string ingress.extraHosts[0].name="$CI_COMMIT_REF_NAME.power.niedersachsen.dev"
      --set-string ingress.extraTls[0].hosts[0]="$CI_COMMIT_REF_NAME.power-cluster-65655d4c73bf47a3300821aa2939abf4-0001.eu-de.containers.appdomain.cloud"
      --set-string ingress.extraTls[1].hosts[0]="$CI_COMMIT_REF_NAME.power.niedersachsen.dev"
  only:
    - /^demo-.*/

helm-delete:branches:
  stage: delete
  dependencies: []
  cache: {}
  variables:
    GIT_STRATEGY: none
  environment:
    name: "$CI_COMMIT_REF_NAME"
    action: stop
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
    - TOKEN=$(curl -s -X POST https://iam.cloud.ibm.com/identity/token -H "content-type:application/x-www-form-urlencoded" -H "accept:application/json" -d "grant_type=urn%3Aibm%3Aparams%3Aoauth%3Agrant-type%3Aapikey&apikey=$IBM_CR_APIKEY" | jq -r ".access_token")
  script:
    - helm uninstall "$CI_COMMIT_REF_NAME" -n dev
    - curl -s -X DELETE -H "Account:$IBM_ACCOUNT_ID" -H "Authorization:Bearer $TOKEN" -H "accept:application/json" --url "https://de.icr.io/api/v1/images/de.icr.io%2Fpower%2Fpower%3A$CI_COMMIT_REF_NAME"
  only:
    - /^demo-.*/
  when: manual
  allow_failure: false
