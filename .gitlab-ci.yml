image: de.icr.io/lgln/kube-tools:latest

services:
  - docker:dind

stages:
  - init
  - test
  - build
  - package
  - scan
  - deploy

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - power/node_modules/
  policy: pull-push

npm-install:
  stage: init
  image: node:lts-alpine
  interruptible: true
  cache:
    <<: *global_cache
  script:
    - cd power
    - npm ci
    - node_modules/.bin/ngcc --tsconfig ./src/tsconfig.app.json -p es2015
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production

init:npm-branches:
  stage: init
  image: node:lts-alpine
  interruptible: true
  cache:
    <<: *global_cache
  script:
    - cd power
    - npm ci
    - node_modules/.bin/ngcc --tsconfig ./src/tsconfig.app.json -p es2015
  only:
    - branches
  except:
    - merge_requests
    - tags
    - dev
    - staging
    - production
  when: manual

test-karma:
  stage: test
  image: trion/ng-cli-karma:latest
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng test --browsers ChromeHeadlessNoSandbox --progress false --watch false --code-coverage
  artifacts:
    expire_in: 2 days
    public: false
    reports:
      junit: power/output/junit_karma.xml
    paths:
      - power/output/junit_karma.xml
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production

test-e2e:
  stage: test
  image: trion/ng-cli-e2e:latest
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/protractor/bin/webdriver-manager update --versions.chrome 91.0.4472.77 --gecko false --standalone false
    - node_modules/@angular/cli/bin/ng e2e -c staging --webdriver-update=false
  artifacts:
    expire_in: 2 days
    public: false
    reports:
      junit: power/output/junit_e2e.xml
    paths:
      - power/output/junit_e2e.xml
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production
  when: manual

npm-audit:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  script:
    - cd power
    - npm audit
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production
  allow_failure: true

lint-ts:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng lint power
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production

lint-html:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - npm run lint:html
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production

lint-styles:
  stage: test
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - npm run lint:styles
  only:
    - merge_requests
    - tags
    - dev
    - staging
    - production

helm-dry-run:
  stage: test
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
  script:
    - helm upgrade power ./chart/power -n dev -f ./chart/power/values-$CI_COMMIT_REF_NAME.yaml --install --dry-run
  only:
    - dev
    - staging
    - production

kubesec:
  stage: test
  interruptible: true
  needs: []
  dependencies: []
  cache: {}
  script:
    - helm template power ./chart/power -f ./chart/power/values-$CI_COMMIT_REF_NAME.yaml | kubesec-scan.sh -
    - helm template power ./chart/power -f ./chart/power/values-$CI_COMMIT_REF_NAME.yaml | kubesec-check.sh -
  only:
    - dev
    - staging
    - production

build:branches:
  stage: build
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: init:npm-branches
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng run power:prerender:staging
  artifacts:
    name: "compiled dist"
    expire_in: 2 days
    public: false
    paths:
      - power/dist/power/browser
  only:
    - branches
  except:
    - merge_requests
    - tags
    - dev
    - staging
    - production
  when: manual

build-test:
  stage: build
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng run power:prerender:staging
  artifacts:
    name: "compiled dist"
    expire_in: 2 days
    public: false
    paths:
      - power/dist/power/browser
  only:
    - merge_requests
    - tags
    - dev
    - staging

build-production:
  stage: build
  image: node:lts-alpine
  interruptible: true
  needs:
    - job: npm-install
      artifacts: false
  dependencies: []
  cache:
    <<: *global_cache
    policy: pull
  script:
    - cd power
    - node_modules/@angular/cli/bin/ng run power:prerender:de
  artifacts:
    name: "compiled dist"
    expire_in: 2 days
    public: false
    paths:
      - power/dist/power/browser
  only:
    - production

package:branches:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  dependencies:
    - build:branches
  cache: {}
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --build-arg=COMMIT="$CI_COMMIT_SHORT_SHA" --build-arg=BRANCH="$CI_COMMIT_REF_NAME"
  only:
    - branches
  except:
    - merge_requests
    - tags
    - dev
    - staging
    - production
  when: manual

kaniko-build:
  stage: package
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  dependencies:
    - build-test
    - build-production
  cache: {}
  environment:
    name: production
    action: prepare
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "$CI_PROJECT_DIR" --dockerfile "$CI_PROJECT_DIR/Dockerfile" --destination "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" --build-arg=COMMIT="$CI_COMMIT_SHORT_SHA" --build-arg=BRANCH="$CI_COMMIT_REF_NAME"
  only:
    - dev
    - staging
    - production

trivy:
  stage: scan
  dependencies: []
  cache: {}
  before_script:
    - i=0; while [ "$i" -lt 12 ]; do docker info &> /dev/null && break; sleep 5; i=$(( i + 1 )) ; done
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    - trivy image --no-progress --ignore-unfixed --exit-code 1 "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    - dev
    - staging
    - production
  allow_failure: true

helm-deploy:
  stage: deploy
  needs:
    - job: docker-build
      artifacts: false
  dependencies: []
  cache: {}
  environment:
    name: $CI_COMMIT_REF_NAME
    action: start
  before_script:
    - kubectl config set-cluster k8s --server="$KUBE_API_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials "$KUBE_DEPLOY_SECRET_NAME" --token="$KUBE_API_TOKEN"
    - kubectl config set-context default --cluster=k8s --user="$KUBE_DEPLOY_SECRET_NAME"
    - kubectl config use-context default
  script:
    - helm upgrade power ./chart/power -n "$CI_COMMIT_REF_NAME" -f "./chart/power/values-$CI_COMMIT_REF_NAME.yaml" --install
      --set-string labels.commit="$CI_COMMIT_SHORT_SHA"
      --set-string annotations.deployedAt="$CI_JOB_STARTED_AT"
  only:
    - dev
    - staging
    - production
